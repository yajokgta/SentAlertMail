<?xml version="1.0"?>
<doc xml:lang="en">
    <assembly>
        <name>Microsoft.Extensions.Logging.ApplicationInsights</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger">
            <summary>
            Application insights logger implementation for <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILogger" />
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.#ctor(System.String,Microsoft.ApplicationInsights.TelemetryClient,Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.ExternalScopeProvider">
            <summary>
            Gets or sets the external scope provider.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.BeginScope``1(``0)">
            <summary>
            Begins a logical operation scope.
            </summary>
            <typeparam name="TState">Current state.</typeparam>
            <param name="state">The identifier for the scope.</param>
            <returns>
            An IDisposable that ends the logical operation scope on dispose.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Checks if the given <paramref name="logLevel" /> is enabled.
            </summary>
            <param name="logLevel">level to be checked.</param>
            <returns>
              <c>true</c> if enabled.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Writes a log entry.
            </summary>
            <typeparam name="TState">State being passed along.</typeparam>
            <param name="logLevel">Entry will be written on this level.</param>
            <param name="eventId">Id of the event.</param>
            <param name="state">The entry to be written. Can be also an object.</param>
            <param name="exception">The exception related to this entry.</param>
            <param name="formatter">Function to create a <c>string</c> message of the <paramref name="state" /> and <paramref name="exception" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.GetSeverityLevel(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Converts the <see cref="T:Microsoft.Extensions.Logging.LogLevel"/> into corresponding Application insights <see cref="T:Microsoft.ApplicationInsights.DataContracts.SeverityLevel"/>.
            </summary>
            <param name="logLevel">Logging log level.</param>
            <returns>Application insights corresponding SeverityLevel for the LogLevel.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLogger.PopulateTelemetry``1(Microsoft.ApplicationInsights.DataContracts.ISupportProperties,``0,Microsoft.Extensions.Logging.EventId)">
            <summary>
            Populates the state, scope and event information for the logging event.
            </summary>
            <typeparam name="TState">State information for the current event.</typeparam>
            <param name="telemetryItem">Telemetry item.</param>
            <param name="state">Event state information.</param>
            <param name="eventId">Event Id information.</param>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerEventSource">
            <summary>
            EventSource for reporting errors and warnings from Logging module.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions">
            <summary>
            <see cref="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions"/> defines the custom behavior of the tracing information sent to Application Insights.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions.TrackExceptionsAsExceptionTelemetry">
            <summary>
            Gets or sets a value indicating whether to track exceptions as <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/>.
            Defaults to true.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions.IncludeScopes">
            <summary>
            Gets or sets a value indicating whether the Scope information is included from telemetry or not.
            Defaults to true.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions.FlushOnDispose">
            <summary>
            Gets or sets a value indicating whether to flush telemetry when disposing
            of the logger provider.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider">
            <summary>
            Application insights logger provider.
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />
            <seealso cref="T:Microsoft.Extensions.Logging.ISupportExternalScope" />
        </member>
        <member name="F:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.applicationInsightsLoggerOptions">
            <summary>
            The application insights logger options.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.telemetryClient">
            <summary>
            The telemetry client to be used to log messages to Application Insights.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.externalScopeProvider">
            <summary>
            The external scope provider to allow setting scope data in messages.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider"/> class.
            </summary>
            <param name="telemetryConfigurationOptions">The telemetry configuration options..</param>
            <param name="applicationInsightsLoggerOptions">The application insights logger options.</param>
            <exception cref="T:System.ArgumentNullException">
            telemetryConfiguration
            or
            loggingFilter
            or
            applicationInsightsLoggerOptions.
            </exception>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance.
            </summary>
            <param name="categoryName">The category name for messages produced by the logger.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance to be used for logging.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
            <summary>
            Sets the scope provider. This method also updates all the existing logger to also use the new ScopeProvider.
            </summary>
            <param name="externalScopeProvider">The external scope provider.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources. 
            </summary>
            <param name="releasedManagedResources">Release managed resources.</param>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsights.NullScope">
            <summary>
            An empty scope without any logic.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsights.NullScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions">
            <summary>
            Extensions methods to add and configure application insights logger.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Adds an ApplicationInsights logger named 'ApplicationInsights' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <returns>Logging builder with Application Insights added to it.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)">
            <summary>
            Adds an ApplicationInsights logger named 'ApplicationInsights' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="instrumentationKey">Application insights instrumentation key.</param>
            <returns>Logging builder with Application Insights added to it.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Action{Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions})">
            <summary>
            Adds an ApplicationInsights logger named 'ApplicationInsights' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="instrumentationKey">Application insights instrumentation key.</param>
            <param name="configureApplicationInsightsLoggerOptions">Action to configure ApplicationInsights logger.</param>
            <returns>Logging builder with Application Insights added to it.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions})">
            <summary>
            Adds an ApplicationInsights logger named 'ApplicationInsights' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configureApplicationInsightsLoggerOptions">Action to configure ApplicationInsights logger.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration},System.Action{Microsoft.Extensions.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions})">
            <summary>
            Adds an ApplicationInsights logger named 'ApplicationInsights' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configureTelemetryConfiguration">Action to configure telemetry configuration.</param>
            <param name="configureApplicationInsightsLoggerOptions">Action to configure ApplicationInsights logger.</param>
        </member>
    </members>
</doc>
